//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TFSUtilities/TFSConcurrentOperation.h>

#import <T1Twitter/TFNDirectMessageCheckSessionExistsOperationDelegate-Protocol.h>
#import <T1Twitter/TFNDirectMessageEncryptOperationDelegate-Protocol.h>
#import <T1Twitter/TFNDirectMessageFetchEncryptionKeysOperationDelegate-Protocol.h>
#import <T1Twitter/TFNDirectMessageProcessEncryptionKeysOperationDelegate-Protocol.h>

@class NSOperation, NSOperationQueue, NSString, TFNDirectMessageCheckSessionExistsOperation, TFNDirectMessageEncryptOperation, TFNDirectMessageFetchEncryptionKeysOperation, TFNDirectMessageProcessEncryptionKeysOperation, TSPSession;
@protocol TFNDirectMessageEncryptMessageWorkflowOperationDelegate;

@interface TFNDirectMessageEncryptMessageWorkflowOperation : TFSConcurrentOperation <TFNDirectMessageCheckSessionExistsOperationDelegate, TFNDirectMessageProcessEncryptionKeysOperationDelegate, TFNDirectMessageFetchEncryptionKeysOperationDelegate, TFNDirectMessageEncryptOperationDelegate>
{
    NSString *_accountID;
    NSString *_messageText;
    NSString *_conversationID;
    long long _recipientUserID;
    NSString *_recipientDeviceID;
    TSPSession *_session;
    id <TFNDirectMessageEncryptMessageWorkflowOperationDelegate> _delegate;
    TFNDirectMessageCheckSessionExistsOperation *_checkSessionExistsOperation;
    TFNDirectMessageFetchEncryptionKeysOperation *_fetchEncryptionKeysOperation;
    TFNDirectMessageProcessEncryptionKeysOperation *_processEncryptionKeysOperation;
    TFNDirectMessageEncryptOperation *_encryptOperation;
    NSOperationQueue *_queue;
    NSOperation *_markCompletedOperation;
}

@property(readonly, nonatomic) NSOperation *markCompletedOperation; // @synthesize markCompletedOperation=_markCompletedOperation;
@property(readonly, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) TFNDirectMessageEncryptOperation *encryptOperation; // @synthesize encryptOperation=_encryptOperation;
@property(readonly, nonatomic) TFNDirectMessageProcessEncryptionKeysOperation *processEncryptionKeysOperation; // @synthesize processEncryptionKeysOperation=_processEncryptionKeysOperation;
@property(readonly, nonatomic) TFNDirectMessageFetchEncryptionKeysOperation *fetchEncryptionKeysOperation; // @synthesize fetchEncryptionKeysOperation=_fetchEncryptionKeysOperation;
@property(readonly, nonatomic) TFNDirectMessageCheckSessionExistsOperation *checkSessionExistsOperation; // @synthesize checkSessionExistsOperation=_checkSessionExistsOperation;
@property __weak id <TFNDirectMessageEncryptMessageWorkflowOperationDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) TSPSession *session; // @synthesize session=_session;
@property(copy) NSString *recipientDeviceID; // @synthesize recipientDeviceID=_recipientDeviceID;
@property(readonly, nonatomic) long long recipientUserID; // @synthesize recipientUserID=_recipientUserID;
@property(readonly, copy, nonatomic) NSString *conversationID; // @synthesize conversationID=_conversationID;
@property(readonly, copy, nonatomic) NSString *messageText; // @synthesize messageText=_messageText;
@property(readonly, copy, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
- (void).cxx_destruct;
- (void)encryptOperation:(id)arg1 didFailWithError:(id)arg2;
- (void)encryptOperationDidSucceed:(id)arg1 encryptedMessage:(id)arg2;
- (void)processEncryptionKeysOperation:(id)arg1 didFailWithError:(id)arg2;
- (void)processEncryptionKeysOperationDidSucceed:(id)arg1;
- (void)fetchEncryptionKeysOperation:(id)arg1 didFailWithError:(id)arg2;
- (void)fetchEncryptionKeysOperationDidSucceed:(id)arg1 fetchResponse:(id)arg2;
- (void)checkSessionExistsOperation:(id)arg1 didFailWithError:(id)arg2;
- (void)checkSessionExistsOperationDidSucceed:(id)arg1 sessionExists:(_Bool)arg2;
- (void)private_cancelTasks;
- (void)private_failWithError:(id)arg1;
- (void)run;
- (void)cancel;
- (id)initWithAccountID:(id)arg1 messageText:(id)arg2 conversationID:(id)arg3 recipientUserID:(long long)arg4 recipientDeviceID:(id)arg5 signalProtocolSession:(id)arg6;

@end

